{"version":3,"sources":["webpack://htmlToFormattedText/webpack/universalModuleDefinition","webpack://htmlToFormattedText/webpack/bootstrap","webpack://htmlToFormattedText/./src/index.js","webpack://htmlToFormattedText/./node_modules/striptags/src/striptags.js","webpack://htmlToFormattedText/./src/utils.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_utils","TAGS_TO_BREAK_ON","compose","html","replace","_striptags2","default","global","nonNative","STATE_PLAINTEXT","STATE_HTML","STATE_COMMENT","ALLOWED_TAGS_REGEX","NORMALIZE_TAG_REGEX","striptags","allowable_tags","tag_replacement","striptags_internal","init_context","tag_set","Set","match","exec","add","iterator","forEach","parse_allowable_tags","state","tag_buffer","depth","in_quote_char","context","output","idx","length","char","has","normalize_tag","slice","toLowerCase","init_streaming_mode","undefined","__WEBPACK_AMD_DEFINE_RESULT__","_len","arguments","fns","Array","_key","reduce","f","g"],"mappings":"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","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"htmlToFormattedText\"] = factory();\n\telse\n\t\troot[\"htmlToFormattedText\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import striptags from \"striptags\";\nimport { compose } from \"./utils\";\n\nconst TAGS_TO_BREAK_ON = [\n    \"p\",\n    \"div\",\n    \"br\",\n    \"hr\",\n    \"title\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"ol\",\n    \"ul\",\n    \"li\",\n    \"pre\",\n    \"table\",\n    \"td\"\n];\n\nconst removeAllNonTagsToBreakOn = html => striptags(html, TAGS_TO_BREAK_ON);\nconst convertTagsToBreak = html => striptags(html, [], \"\\n\");\nconst replaceSpaces = html => html.replace(/&nbsp;/g, \" \");\nconst replaceMultiNewLines = html => html.replace(/\\n\\n/g, \"\\n\");\nconst removeLeadingNewLines = html => html.replace(/\\n+$/, \"\");\nconst removeTrailingNewLines = html => html.replace(/^\\n+/, \"\");\n\nmodule.exports = compose(\n    removeTrailingNewLines,\n    removeLeadingNewLines,\n    replaceMultiNewLines,\n    replaceSpaces,\n    convertTagsToBreak,\n    removeAllNonTagsToBreakOn\n);\n","'use strict';\n\n(function (global) {\n\n    // minimal symbol polyfill for IE11 and others\n    if (typeof Symbol !== 'function') {\n        var Symbol = function(name) {\n            return name;\n        }\n\n        Symbol.nonNative = true;\n    }\n\n    const STATE_PLAINTEXT = Symbol('plaintext');\n    const STATE_HTML      = Symbol('html');\n    const STATE_COMMENT   = Symbol('comment');\n\n    const ALLOWED_TAGS_REGEX  = /<(\\w*)>/g;\n    const NORMALIZE_TAG_REGEX = /<\\/?([^\\s\\/>]+)/;\n\n    function striptags(html, allowable_tags, tag_replacement) {\n        html            = html || '';\n        allowable_tags  = allowable_tags || [];\n        tag_replacement = tag_replacement || '';\n\n        let context = init_context(allowable_tags, tag_replacement);\n\n        return striptags_internal(html, context);\n    }\n\n    function init_striptags_stream(allowable_tags, tag_replacement) {\n        allowable_tags  = allowable_tags || [];\n        tag_replacement = tag_replacement || '';\n\n        let context = init_context(allowable_tags, tag_replacement);\n\n        return function striptags_stream(html) {\n            return striptags_internal(html || '', context);\n        };\n    }\n\n    striptags.init_streaming_mode = init_striptags_stream;\n\n    function init_context(allowable_tags, tag_replacement) {\n        allowable_tags = parse_allowable_tags(allowable_tags);\n\n        return {\n            allowable_tags : allowable_tags,\n            tag_replacement: tag_replacement,\n\n            state         : STATE_PLAINTEXT,\n            tag_buffer    : '',\n            depth         : 0,\n            in_quote_char : ''\n        };\n    }\n\n    function striptags_internal(html, context) {\n        let allowable_tags  = context.allowable_tags;\n        let tag_replacement = context.tag_replacement;\n\n        let state         = context.state;\n        let tag_buffer    = context.tag_buffer;\n        let depth         = context.depth;\n        let in_quote_char = context.in_quote_char;\n        let output        = '';\n\n        for (let idx = 0, length = html.length; idx < length; idx++) {\n            let char = html[idx];\n\n            if (state === STATE_PLAINTEXT) {\n                switch (char) {\n                    case '<':\n                        state       = STATE_HTML;\n                        tag_buffer += char;\n                        break;\n\n                    default:\n                        output += char;\n                        break;\n                }\n            }\n\n            else if (state === STATE_HTML) {\n                switch (char) {\n                    case '<':\n                        // ignore '<' if inside a quote\n                        if (in_quote_char) {\n                            break;\n                        }\n\n                        // we're seeing a nested '<'\n                        depth++;\n                        break;\n\n                    case '>':\n                        // ignore '>' if inside a quote\n                        if (in_quote_char) {\n                            break;\n                        }\n\n                        // something like this is happening: '<<>>'\n                        if (depth) {\n                            depth--;\n\n                            break;\n                        }\n\n                        // this is closing the tag in tag_buffer\n                        in_quote_char = '';\n                        state         = STATE_PLAINTEXT;\n                        tag_buffer   += '>';\n\n                        if (allowable_tags.has(normalize_tag(tag_buffer))) {\n                            output += tag_buffer;\n                        } else {\n                            output += tag_replacement;\n                        }\n\n                        tag_buffer = '';\n                        break;\n\n                    case '\"':\n                    case '\\'':\n                        // catch both single and double quotes\n\n                        if (char === in_quote_char) {\n                            in_quote_char = '';\n                        } else {\n                            in_quote_char = in_quote_char || char;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    case '-':\n                        if (tag_buffer === '<!-') {\n                            state = STATE_COMMENT;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    case ' ':\n                    case '\\n':\n                        if (tag_buffer === '<') {\n                            state      = STATE_PLAINTEXT;\n                            output    += '< ';\n                            tag_buffer = '';\n\n                            break;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    default:\n                        tag_buffer += char;\n                        break;\n                }\n            }\n\n            else if (state === STATE_COMMENT) {\n                switch (char) {\n                    case '>':\n                        if (tag_buffer.slice(-2) == '--') {\n                            // close the comment\n                            state = STATE_PLAINTEXT;\n                        }\n\n                        tag_buffer = '';\n                        break;\n\n                    default:\n                        tag_buffer += char;\n                        break;\n                }\n            }\n        }\n\n        // save the context for future iterations\n        context.state         = state;\n        context.tag_buffer    = tag_buffer;\n        context.depth         = depth;\n        context.in_quote_char = in_quote_char;\n\n        return output;\n    }\n\n    function parse_allowable_tags(allowable_tags) {\n        let tag_set = new Set();\n\n        if (typeof allowable_tags === 'string') {\n            let match;\n\n            while ((match = ALLOWED_TAGS_REGEX.exec(allowable_tags))) {\n                tag_set.add(match[1]);\n            }\n        }\n\n        else if (!Symbol.nonNative &&\n                 typeof allowable_tags[Symbol.iterator] === 'function') {\n\n            tag_set = new Set(allowable_tags);\n        }\n\n        else if (typeof allowable_tags.forEach === 'function') {\n            // IE11 compatible\n            allowable_tags.forEach(tag_set.add, tag_set);\n        }\n\n        return tag_set;\n    }\n\n    function normalize_tag(tag_buffer) {\n        let match = NORMALIZE_TAG_REGEX.exec(tag_buffer);\n\n        return match ? match[1].toLowerCase() : null;\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(function module_factory() { return striptags; });\n    }\n\n    else if (typeof module === 'object' && module.exports) {\n        // Node\n        module.exports = striptags;\n    }\n\n    else {\n        // Browser\n        global.striptags = striptags;\n    }\n}(this));\n","const compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));\n\nmodule.exports = { compose };\n"],"sourceRoot":""}